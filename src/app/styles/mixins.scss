$screen-xs:                  480px !default;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs !default;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xxs-max:             ($screen-xs-min - 1) !default;
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;

.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

%center-vertical {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

%rounded-borders {
  border-radius: 10px;
}

%flex-row {
  display: flex;
  flex-direction: row;
  align-items: baseline;
}


%no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin responsive-only($media, $orientation: false) {

  @if $orientation  {
    @if $media == xxs {
      @media (max-width: $screen-xs-min) and (orientation: $orientation) { @content; }
    }
    @else if $media == lt-sm {
      @media (max-width: $screen-xs-max) and (orientation: $orientation) { @content; }
    }
    @else if $media == gt-xs {
      @media (min-width: $screen-sm-min) and (orientation: $orientation) { @content; }
    }
    @else if $media == gt-xxs {
      @media (min-width: $screen-xs-min) and (orientation: $orientation) { @content; }
    }
  }
  @else {
    @if $media == xxs {
      @media (max-width: $screen-xxs-max) { @content; }
    }
    @else if $media == xs {
      @media (max-width: $screen-xs-max) and (min-width: $screen-xs-min) { @content; }
    }
    @else if $media == sm {
      @media (max-width: $screen-sm-max) and (min-width: $screen-sm-min) { @content; }
    }
    @else if $media == md {
      @media (max-width: $screen-md-max) and (min-width: $screen-md-min) { @content; }
    }
    @else if $media == lg {
      @media (min-width: $screen-lg-min) { @content; }
    }
    @else if $media == lt-sm {
      @media (max-width: $screen-xs-max) { @content; }
    }
    @else if $media == lt-md {
      @media (max-width: $screen-md-min) { @content; }
    }
    @else if $media == gt-xs {
      @media (min-width: $screen-sm-min) { @content; }
    }
    @else if $media == gt-xxs {
      @media (min-width: $screen-xs-min) { @content; }
    }
    @else if $media == iphone5 {
      @media (max-width: 320px) { @content; }
    }
  }

}


%disabled {
  opacity: 0.7;
  pointer-events: none;
}
